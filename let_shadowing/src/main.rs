fn main() {
    // rust允许声明相同的变量名，在后面的声明的变量会遮蔽掉前面声明的
    let x = 5;
    // 在main函数作用域内对之前的x进行遮蔽
    let x = x + 1;

    {
        let x = x * 2;
        // 在当前花括号作用域内，对之前的x进行遮蔽
        println!("x: {}",x);
    }
    println!("main==> x: {}",x);

    // 变量遮蔽和mut的不同之处在于第二个let生成了完全不同的新变量，两个变量只是恰好拥有相同的名称，这里涉及一次内存对象的分配，而mut声明的变量，可以修改同一个地址上的值，并不会发生内存对象的分配，性能更好
    // 变量遮蔽的用处在于，如果你在某个作用域内无需再使用之前的变量（在被遮蔽后，无法再访问到之前的同名变量），就可以重复的使用变量名字，而不用绞尽脑汁去想更多的名字
}
